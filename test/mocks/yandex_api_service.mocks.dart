// Mocks generated by Mockito 5.4.6 from annotations
// in yapartner/test/mocks/yandex_api_service.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:yapartner/models/report_response.dart' as _i2;
import 'package:yapartner/models/tree_field.dart' as _i5;
import 'package:yapartner/services/yandex_api_service.dart' as _i3;
import 'package:yapartner/widgets/period_selector.dart' as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeReportResponse_0 extends _i1.SmartFake
    implements _i2.ReportResponse {
  _FakeReportResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [YandexApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockYandexApiService extends _i1.Mock implements _i3.YandexApiService {
  MockYandexApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<Map<String, dynamic>>> fetchStatistics({
    required String? token,
    String? period,
    DateTime? fromDate,
    DateTime? toDate,
    List<String>? fields = const ['shows'],
    String? dimension = 'date|day',
  }) =>
      (super.noSuchMethod(
            Invocation.method(#fetchStatistics, [], {
              #token: token,
              #period: period,
              #fromDate: fromDate,
              #toDate: toDate,
              #fields: fields,
              #dimension: dimension,
            }),
            returnValue: _i4.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i4.Future<List<Map<String, dynamic>>>);

  @override
  _i4.Future<List<_i5.TreeField>> fetchAvailableFields(String? token) =>
      (super.noSuchMethod(
            Invocation.method(#fetchAvailableFields, [token]),
            returnValue: _i4.Future<List<_i5.TreeField>>.value(
              <_i5.TreeField>[],
            ),
          )
          as _i4.Future<List<_i5.TreeField>>);

  @override
  _i4.Future<_i2.ReportResponse> fetchMainStats({
    required String? token,
    required DateTime? from,
    required DateTime? to,
    required _i6.PeriodOption? period,
    required List<String>? fields,
    Map<String, String>? dimensionFields = const {},
    List<String>? entityFields = const [],
    int? limit = 50,
    int? offset = 0,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#fetchMainStats, [], {
              #token: token,
              #from: from,
              #to: to,
              #period: period,
              #fields: fields,
              #dimensionFields: dimensionFields,
              #entityFields: entityFields,
              #limit: limit,
              #offset: offset,
            }),
            returnValue: _i4.Future<_i2.ReportResponse>.value(
              _FakeReportResponse_0(
                this,
                Invocation.method(#fetchMainStats, [], {
                  #token: token,
                  #from: from,
                  #to: to,
                  #period: period,
                  #fields: fields,
                  #dimensionFields: dimensionFields,
                  #entityFields: entityFields,
                  #limit: limit,
                  #offset: offset,
                }),
              ),
            ),
          )
          as _i4.Future<_i2.ReportResponse>);
}
